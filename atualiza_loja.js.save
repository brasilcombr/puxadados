constfs = require("fs");
const path = require("path");
const { execSync } = require("child_process");

const rootDir = __dirname;
const produtosDir = path.join(rootDir, "produtos");
const checkoutDir = path.join(rootDir, "checkout");

// garante pasta checkout
if (!fs.existsSync(checkoutDir)) fs.mkdirSync(checkoutDir);

// HTML do checkout novo
const checkoutTemplate = `<!DOCTYPE html>
<html lang="pt-BR">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<title>Checkout</title>
<style>
  :root {
    --bg:#f7f8fa;
    --card:#fff;
    --accent:#ff4d87;
    --accent-dark:#e04378;
    --success:#28a745;
    --muted:#7b7b7b;
    --shadow:0 8px 30px rgba(16,24,40,0.06);
    --radius:14px;
    font-family:"Inter","Segoe UI",Arial,sans-serif;
  }
  html,body{height:100%;margin:0;background:var(--bg);}
  .wrap{max-width:960px;margin:24px auto;padding:18px;}
  header{margin-bottom:20px}
  header a{text-decoration:none;font-weight:bold;font-size:18px;color:var(--accent);}
  .card{background:var(--card);border-radius:var(--radius);box-shadow:var(--shadow);overflow:hidden;display:flex;flex-direction:row;}
  .left{flex:1;padding:26px 28px}
  .right{width:360px;border-left:1px solid #f0f0f3;padding:26px 22px;background:linear-gradient(180deg,#fff,#fcfcfc)}
  @media (max-width:850px){.card{flex-direction:column}.right{width:100%;border-left:none;border-top:1px solid #f0f0f3}}
  .stepper{display:flex;gap:12px;align-items:center;margin-bottom:20px;flex-wrap:wrap}
  .step{display:flex;align-items:center;gap:10px;padding:6px 10px;border-radius:10px;color:var(--muted);font-weight:600;font-size:14px}
  .step .dot{width:34px;height:34px;border-radius:50%;display:flex;align-items:center;justify-content:center;background:#fff;border:2px solid #eee;color:#666;font-weight:700}
  .step.active{color:var(--accent);background:rgba(255,77,135,0.06)}
  .step.active .dot{background:var(--accent);color:white;border:none}
  h1{font-size:20px;margin:0 0 6px}
  .subtitle{color:var(--muted);margin-bottom:16px}
  .grid{display:grid;grid-template-columns:1fr 1fr;gap:12px;margin-bottom:12px}
  @media (max-width:520px){.grid{grid-template-columns:1fr}}
  label{display:block;font-size:13px;color:#333;margin-bottom:6px}
  input{width:100%;padding:12px;border-radius:10px;border:1px solid #e6e6e9;background:#fff;font-size:14px;box-sizing:border-box}
  .btn{padding:12px 16px;border-radius:10px;border:none;background:var(--accent);color:white;font-weight:700;cursor:pointer}
  .btn.ghost{background:#fff;color:var(--accent);border:2px solid #fde5ee}
  .btn.full{width:100%;font-size:16px;padding:14px}
  .pay-grid{display:flex;gap:12px;flex-wrap:wrap;margin-top:8px}
  .pay-opt{flex:1;min-width:140px;border-radius:12px;padding:12px;background:#fafafa;border:1px solid #f0f0f3;cursor:pointer;display:flex;align-items:center;gap:12px}
  .pay-opt.selected{border-color:var(--accent);box-shadow:0 6px 18px rgba(224,67,120,0.06);background:#fff}
  .pay-icon{width:46px;height:46px;border-radius:10px;background:#fff;display:flex;align-items:center;justify-content:center;border:1px solid #eee;font-size:20px}
  .summary-title{font-weight:700;color:#333;margin-bottom:8px}
  .product-row{display:flex;gap:12px;align-items:center;margin-bottom:12px}
  .thumb{width:76px;height:76px;border-radius:10px;object-fit:cover;border:1px solid #eee}
  .price{font-weight:800;color:#111;font-size:18px}
</style>
</head>
<body>
<div class="wrap">
  <header>
    <a href="https://brasilcombr.github.io/puxadados/">‚Üê Voltar para Loja</a>
  </header>
  <div class="card">
    <div class="left">
      <div class="stepper">
        <div class="step active" data-step="1"><div class="dot">1</div>Dados</div>
        <div class="step" data-step="2"><div class="dot">2</div>Endere√ßo</div>
        <div class="step" data-step="3"><div class="dot">3</div>Pagamento</div>
      </div>
      <div id="stepContent">
        <section data-step="1" class="step-section">
          <h1>Dados Pessoais</h1>
          <div class="grid">
            <div><label>Nome completo</label><input id="nome"></div>
            <div><label>Email</label><input id="email" type="email"></div>
          </div>
          <div class="grid"><div><label>Telefone</label><input id="tel" type="tel"></div></div>
          <div style="margin-top:18px"><button class="btn" onclick="nextStep()">Pr√≥ximo</button></div>
        </section>
        <section data-step="2" class="step-section" style="display:none">
          <h1>Endere√ßo</h1>
          <div><label>Rua</label><input id="rua"></div>
          <div class="grid"><div><label>N√∫mero</label><input id="num"></div><div><label>Bairro</label><input id="bairro"></div></div>
          <div class="grid"><div><label>Cidade</label><input id="cidade"></div><div><label>Estado</label><input id="estado"></div></div>
          <div class="grid"><div><label>CEP</label><input id="cep"></div></div>
          <div style="margin-top:18px;display:flex;gap:10px">
            <button class="btn ghost" onclick="prevStep()">Voltar</button>
            <button class="btn" onclick="nextStep()">Pr√≥ximo</button>
          </div>
        </section>
        <section data-step="3" class="step-section" style="display:none">
          <h1>Pagamento</h1>
          <p class="subtitle">Frete gr√°tis aplicado automaticamente.</p>
          <div class="pay-grid">
            <div class="pay-opt" data-pay="pix" onclick="selectPay(this)"><div class="pay-icon">‚ö°</div><div><strong>Pix (5% OFF)</strong></div></div>
            <div class="pay-opt" data-pay="cartao" onclick="selectPay(this)"><div class="pay-icon">üí≥</div><div><strong>Cart√£o</strong></div></div>
          </div>
          <div id="payFormArea" style="margin-top:18px"></div>
          <div style="margin-top:18px"><button class="btn" onclick="finalize()">Finalizar</button></div>
        </section>
      </div>
    </div>
    <aside class="right">
      <div>
        <div class="summary-title">Resumo do Pedido</div>
        <div id="cartArea"></div>
        <div style="font-weight:bold;font-size:18px;margin-top:10px">
          Total: <span id="cartTotal">R$ 0,00</span>
        </div>
      </div>
    </aside>
  </div>
</div>
<script>
let currentStep=1, selectedPay=null;
function updateSteps(){document.querySelectorAll('.step').forEach(el=>{el.classList.toggle('active', Number(el.dataset.step)===currentStep)});document.querySelectorAll('.step-section').forEach(sec=>{sec.style.display=Number(sec.dataset.step)===currentStep?'':'none'})}
function nextStep(){if(currentStep<3){currentStep++;updateSteps();}}
function prevStep(){if(currentStep>1){currentStep--;updateSteps();}}
function selectPay(el){document.querySelectorAll('.pay-opt').forEach(x=>x.classList.remove('selected'));el.classList.add('selected');selectedPay=el.dataset.pay;document.getElementById('payFormArea').innerHTML=selectedPay==='cartao'?"<p>Formul√°rio de cart√£o aqui...</p>":"<p>Use o QR Pix gerado.</p>";}
function finalize(){if(!selectedPay){alert("Escolha uma forma de pagamento");return;}alert("Pedido confirmado! Obrigado.");}

// ==== Produtos no Checkout ====
const p=new URLSearchParams(location.search);
const cartArea=document.getElementById("cartArea");
let total=0;

// Comprar Agora
if(p.get("nome")){
  const nome=p.get("nome");
  const preco=p.get("preco");
  const img=p.get("img")||"produto.png";
  cartArea.innerHTML=\`
    <div class="product-row">
      <img class="thumb" src="../img/\${img}">
      <div>
        <div>\${nome}</div>
        <div class="price">\${preco}</div>
      </div>
    </div>\`;
  document.getElementById("cartTotal").innerText=preco;
}else{
  // Carrinho inteiro
  const carrinho=JSON.parse(localStorage.getItem("carrinho")||"[]");
  if(carrinho.length===0){
    cartArea.innerHTML="<p>Carrinho vazio</p>";
  }else{
    cartArea.innerHTML=carrinho.map(item=>\`
      <div class="product-row">
        <img class="thumb" src="../img/\${item.img}">
        <div>
          <div>\${item.nome}</div>
          <div class="price">\${item.preco}</div>
          <div>Qtd: \${item.qtd}</div>
        </div>
      </div>
    \`).join("");
    total=carrinho.reduce((sum,item)=>{
      const valor=parseFloat(item.preco.replace("R$","").replace(",","."));
      return sum+valor*item.qtd;
    },0);
    document.getElementById("cartTotal").innerText="R$ "+total.toFixed(2).replace(".",",");
  }
}
updateSteps();
</script>
</body>
</html>`;

// percorre produtos
fs.readdirSync(produtosDir).forEach(file => {
  if (!file.endsWith(".html")) return;
  const filePath = path.join(produtosDir, file);
  const html = fs.readFileSync(filePath, "utf8");

  // pega dados do produto
  const nome = (html.match(/<h1.*?>(.*?)<\/h1>/i) || [,"Produto"])[1].trim();
  const preco = (html.match(/R\\$ ?\\d+,\\d{2}/) || ["R$ 0,00"])[0];
  const img = (html.match(/<img[^>]+src="([^"]+)"/i) || [,"produto.png"])[1].split("/").pop();

  // cria checkout
  const base = path.basename(file, ".html");
const checkoutFile = path.join(checkoutDir, `${base}-checkout.html`); 
let checkoutHtml = checkoutTemplate.replace("</script>", `
/* Produto injetado */
</script>\`);
  fs.writeFileSync(checkoutFile, checkoutHtml, "utf8");
  console.log("‚úî Checkout atualizado:", checkoutFile);

  // bot√µes do produto
  const novoBotoes = \`
    <div style="display:flex;gap:10px;margin-top:10px">
      <a class="btn" href="../checkout/\${base}-checkout.html?nome=\${encodeURIComponent(nome)}&preco=\${encodeURIComponent(preco)}&img=\${encodeURIComponent(img)}">Comprar Agora</a>
      <button class="btn ghost" onclick="addCarrinho('\${nome}','\${preco}','\${img}')">Adicionar ao Carrinho</button>
    </div>
    <script>
    function addCarrinho(nome,preco,img){
      let carrinho=JSON.parse(localStorage.getItem('carrinho')||'[]');
      let item=carrinho.find(p=>p.nome===nome);
      if(item){item.qtd++}else{carrinho.push({nome,preco,img,qtd:1})}
      localStorage.setItem('carrinho',JSON.stringify(carrinho));
      alert('Produto adicionado ao carrinho!');
    }
    </script>
  \`;
  const atualizado = html.replace(/<a[^>]*>.*?Comprar.*?<\\/a>/i, novoBotoes);
  fs.writeFileSync(filePath, atualizado, "utf8");
});

// corrige index.html
const indexPath = path.join(rootDir, "index.html");
if (fs.existsSync(indexPath)) {
  let indexHtml = fs.readFileSync(indexPath, "utf8");
  fs.readdirSync(produtosDir).forEach(file => {
    if (!file.endsWith(".html")) return;
    const nome = (fs.readFileSync(path.join(produtosDir,file),"utf8").match(/<h1.*?>(.*?)<\\/h1>/i)||[,"Produto"])[1].trim();
    const preco = (fs.readFileSync(path.join(produtosDir,file),"utf8").match(/R\\$ ?\\d+,\\d{2}/)||["R$ 0,00"])[0];
    const img = (fs.readFileSync(path.join(produtosDir,file),"utf8").match(/<img[^>]+src="([^"]+)"/i)||[,"produto.png"])[1].split("/").pop();
    const base = path.basename(file, ".html");
    const novo = \`
      <div style="display:flex;gap:10px">
        <a class="btn" href="checkout/\${base}-checkout.html?nome=\${encodeURIComponent(nome)}&preco=\${encodeURIComponent(preco)}&img=\${encodeURIComponent(img)}">Comprar Agora</a>
        <button class="btn ghost" onclick="addCarrinho('\${nome}','\${preco}','\${img}')">Adicionar ao Carrinho</button>
      </div>
    \`;
    indexHtml=indexHtml.replace(new RegExp(\`<a[^>]+href=["'][^"']*\${base}[^"']*["'][^>]*>.*?Comprar.*?<\\\\/a>\`,"i"),novo);
  });
  indexHtml=indexHtml.replace("</body>",\`
  <script>
  function addCarrinho(nome,preco,img){
    let carrinho=JSON.parse(localStorage.getItem('carrinho')||'[]');
    let item=carrinho.find(p=>p.nome===nome);
    if(item){item.qtd++}else{carrinho.push({nome,preco,img,qtd:1})}
    localStorage.setItem('carrinho',JSON.stringify(carrinho));
    alert('Produto adicionado ao carrinho!');
  }
  </script>
  </body>\`);
  fs.writeFileSync(indexPath, indexHtml, "utf8");
  console.log("‚úî Index atualizado");
}

// push force pro GitHub
try {
  execSync("git add . && git commit -m 'Atualiza checkout + carrinho' && git push origin main --force", {stdio:"inherit"});
  console.log("‚úî Altera√ß√µes enviadas pro GitHub com force");
} catch (err) {
  console.error("‚ö† Erro ao enviar pro GitHub:", err.message);
}

